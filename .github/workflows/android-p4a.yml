name: Build Android APK with Python-for-Android

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install essential system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            zip \
            unzip \
            openjdk-8-jdk \
            autoconf \
            automake \
            libtool \
            pkg-config \
            zlib1g-dev \
            cmake \
            libffi-dev \
            libssl-dev \
            gettext \
            autopoint \
            libltdl-dev \
            ccache

      - name: Install Python-for-Android and Cython
        run: |
          # Используем более стабильную версию python-for-android
          pip install python-for-android==2022.9.4
          pip install cython==0.29.33

      - name: Set up Android SDK and NDK
        run: |
          mkdir -p android-sdk
          mkdir -p android-ndk

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip -q commandlinetools-linux-8512546_latest.zip
          mkdir -p android-sdk/cmdline-tools/latest
          mv cmdline-tools/* android-sdk/cmdline-tools/latest/
          rm -rf cmdline-tools commandlinetools-linux-8512546_latest.zip

          # Используем более стабильную версию NDK r21e
          wget -q https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
          unzip -q android-ndk-r21e-linux-x86_64.zip
          mv android-ndk-r21e/* android-ndk/
          rm -rf android-ndk-r21e android-ndk-r21e-linux-x86_64.zip

          echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$GITHUB_WORKSPACE/android-ndk" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin:$GITHUB_WORKSPACE/android-ndk:$PATH" >> $GITHUB_ENV

      - name: Accept Android SDK licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | sdkmanager --licenses

      - name: Install Android platform and build-tools
        run: |
          # Используем более старую версию Android API для совместимости
          sdkmanager "platforms;android-30"
          sdkmanager "build-tools;30.0.3"
          sdkmanager "platform-tools"
          sdkmanager "cmake;3.10.2"

      - name: Remove problematic Python 2 scripts from NDK
        run: |
          # Удаляем все проблемные Python 2 скрипты из NDK
          find "$ANDROID_NDK_HOME" -name "*.py" -exec grep -l "print [^']" {} \; | xargs rm -f || true
          find "$ANDROID_NDK_HOME" -name "*.py" -exec grep -l "print '" {} \; | xargs rm -f || true

      - name: Build with Python-for-Android
        run: |
          p4a apk \
            --dist_name=examapp \
            --bootstrap=sdl2 \
            --requirements=python3,kivy==2.1.0 \  # Используем более старую версию Kivy
            --arch=arm64-v8a \
            --android-api=30 \  # Используем более старый API
            --private=. \
            --package=org.exam.examapp \
            --name="Exam App" \
            --version=0.1 \
            --orientation=portrait \
            --window \
            --permission=INTERNET \
            --ndk-api=21 \
            --ignore-setup-py

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: dist/*.apk